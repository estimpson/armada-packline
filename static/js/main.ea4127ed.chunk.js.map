{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelectPart","props","Form","Group","as","Row","Label","column","sm","className","Col","Select","value","part","SpecialInstructions","acknowledged","Control","rows","plaintext","readOnly","defaultValue","instructions","Check","label","checked","VerifyPieceWeight","type","quantity","pieceWeight","valid","DeflashDetails","operator","machine","Button","StartNewJob","Card","Body","Title","BeginJobSummary","LotQuantity","InputGroup","boxes","Text","standardPack","partialBoxQuantity","LotQuantitySummary","InventoryBox","serial","partial","FloatingLabel","controlId","RunJob","step","jobInProgress","objectList","length","xs","md","map","object","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea4127ed.chunk.js","sourcesContent":["import {\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Container,\r\n    FloatingLabel,\r\n    Form,\r\n    InputGroup,\r\n    Row,\r\n} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction SelectPart(props: { part?: string }) {\r\n    return (\r\n        <Form.Group as={Row}>\r\n            <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                Select Part Number\r\n            </Form.Label>\r\n            <Col sm=\"9\">\r\n                <Form.Select value={props.part}>\r\n                    <option>[None selected]</option>\r\n                    <option value=\"1\">XXX</option>\r\n                    <option value=\"2\">YYY</option>\r\n                    <option value=\"3\">ZZZ</option>\r\n                </Form.Select>\r\n            </Col>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nfunction SpecialInstructions(props: {\r\n    instructions: string;\r\n    acknowledged: boolean;\r\n}) {\r\n    return (\r\n        <>\r\n            <Form.Group\r\n                as={Row}\r\n                className={\r\n                    props.acknowledged ? 'mb-1' : 'mb-1 text-white bg-danger'\r\n                }\r\n            >\r\n                <Form.Label column sm=\"3\">\r\n                    Special Instructions\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        plaintext\r\n                        readOnly\r\n                        defaultValue={props.instructions}\r\n                        className={props.acknowledged ? '' : 'text-white'}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Row className=\"mb-3\">\r\n                <Col sm=\"3\"></Col>\r\n                <Col sm=\"9\">\r\n                    <Form.Check\r\n                        label=\"Acknowlege\"\r\n                        checked={props.acknowledged}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction VerifyPieceWeight(props: {\r\n    quantity?: number;\r\n    pieceWeight?: number;\r\n    valid?: boolean;\r\n}) {\r\n    return (\r\n        <>\r\n            <Form.Group as={Row} className=\"mb-3\">\r\n                <Form.Label column sm=\"3\">\r\n                    Piece Weight Quantity\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                    <Form.Control type=\"number\" value={props.quantity} />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mb-1\">\r\n                <Form.Label column sm=\"3\">\r\n                    Piece Weight Pounds\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                    <Form.Control type=\"number\" value={props.pieceWeight} />\r\n                </Col>\r\n            </Form.Group>\r\n            {props.quantity && props.pieceWeight ? (\r\n                <>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Col sm=\"3\"></Col>\r\n                        <Col sm=\"9\">\r\n                            <p>Piece weight appears valid [+/- 0.25%]</p>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {!props.valid ? (\r\n                        <>\r\n                            <p>or...</p>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mb-3 text-white bg-danger\"\r\n                            >\r\n                                <Col sm=\"3\"></Col>\r\n                                <Col sm=\"9\">\r\n                                    <p>\r\n                                        Piece weight exceeds tolerance [+/-\r\n                                        5.25%]\r\n                                    </p>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <p className=\"fst-italics text-white bg-warning px-2\">\r\n                                What do we want to do at this point if the piece\r\n                                weight is out of tolerance? Should we add a\r\n                                \"notify quality inspector\" button and let them\r\n                                proceed to label or not?\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction DeflashDetails(props: { operator?: string; machine?: string }) {\r\n    return (\r\n        <>\r\n            {' '}\r\n            <Form.Group as={Row}>\r\n                <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                    Deflash Operator\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                    <Form.Control value={props.operator}></Form.Control>\r\n                </Col>\r\n                <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                    Deflash Machine\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                    <Form.Control value={props.machine}></Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n            {props.operator && props.machine ? (\r\n                <>\r\n                    <Button>Open Job</Button>\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction StartNewJob(props: {\r\n    part?: string;\r\n    instructions?: string;\r\n    acknowledged?: boolean;\r\n    quantity?: number;\r\n    pieceWeight?: number;\r\n    valid?: boolean;\r\n    operator?: string;\r\n    machine?: string;\r\n    jobInProgress?: boolean;\r\n}) {\r\n    return (\r\n        <>\r\n            <Card className=\"mb-3\">\r\n                <Card.Body>\r\n                    <Card.Title>Begin New Job</Card.Title>\r\n                    <Form>\r\n                        <SelectPart part={props.part} />\r\n                        {props.part && props.instructions && (\r\n                            <SpecialInstructions\r\n                                instructions={props.instructions || ''}\r\n                                acknowledged={props.acknowledged || false}\r\n                            />\r\n                        )}\r\n                        {props.part &&\r\n                            (!props.instructions || props.acknowledged) && (\r\n                                <VerifyPieceWeight\r\n                                    quantity={props.quantity}\r\n                                    pieceWeight={props.pieceWeight}\r\n                                    valid={true}\r\n                                />\r\n                            )}\r\n                        {props.part &&\r\n                            (!props.instructions || props.acknowledged) &&\r\n                            props.valid && (\r\n                                <DeflashDetails\r\n                                    operator={props.operator}\r\n                                    machine={props.machine}\r\n                                />\r\n                            )}\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction BeginJobSummary(props: {\r\n    part?: string;\r\n    instructions?: string;\r\n    acknowledged?: boolean;\r\n    quantity?: number;\r\n    pieceWeight?: number;\r\n    valid?: boolean;\r\n    operator?: string;\r\n    machine?: string;\r\n}) {\r\n    return (\r\n        <Card.Body>\r\n            <Card.Title>Job In Progress</Card.Title>\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                        Part Number\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control plaintext readOnly value={props.part} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                        Weighed\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control\r\n                            plaintext\r\n                            readOnly\r\n                            value={`${props.quantity} @ ${props.pieceWeight}`}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                        Deflashed\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control\r\n                            plaintext\r\n                            readOnly\r\n                            value={`By ${props.operator} @ ${props.machine}`}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm=\"3\" className=\"mb-3\">\r\n                        Special Instructions\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control\r\n                            plaintext\r\n                            readOnly\r\n                            value={props.instructions}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </Card.Body>\r\n    );\r\n}\r\n\r\nfunction LotQuantity(props: {\r\n    standardPack: number;\r\n    boxes?: number;\r\n    partialBoxQuantity?: number;\r\n}) {\r\n    return (\r\n        <Card className=\"mb-3\">\r\n            <Card.Body>\r\n                <Card.Title>Enter Lot Quantity</Card.Title>\r\n                <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Boxes\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <InputGroup>\r\n                                <Form.Control value={props.boxes} />\r\n                                <InputGroup.Text>\r\n                                    @ {props.standardPack}\r\n                                </InputGroup.Text>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Partial Box\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control value={props.partialBoxQuantity} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Total Quantity\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                value={`${props.boxes} boxes @ ${\r\n                                    props.standardPack\r\n                                } = ${\r\n                                    (props.boxes || 0) * props.standardPack\r\n                                } ${\r\n                                    props.partialBoxQuantity &&\r\n                                    `+ ${props.partialBoxQuantity} partial`\r\n                                } = ${\r\n                                    (props.boxes || 0) * props.standardPack +\r\n                                    (props.partialBoxQuantity || 0)\r\n                                } total`}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {props.boxes ? (\r\n                        <>\r\n                            <Button>Generate Inventory</Button>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction LotQuantitySummary(props: {\r\n    standardPack: number;\r\n    boxes?: number;\r\n    partialBoxQuantity?: number;\r\n}) {\r\n    return (\r\n        <Card.Body>\r\n            <Card.Title>Lot Quantity Summary</Card.Title>\r\n            <Form>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm=\"3\">\r\n                        Boxes\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control\r\n                            plaintext\r\n                            readOnly\r\n                            value={`${props.boxes} @ ${props.standardPack}`}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm=\"3\">\r\n                        Partial Box\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control\r\n                            plaintext\r\n                            readOnly\r\n                            value={props.partialBoxQuantity}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                    <Form.Label column sm=\"3\">\r\n                        Total Quantity\r\n                    </Form.Label>\r\n                    <Col sm=\"9\">\r\n                        <Form.Control\r\n                            plaintext\r\n                            readOnly\r\n                            value={`${props.boxes} boxes @ ${\r\n                                props.standardPack\r\n                            } = ${(props.boxes || 0) * props.standardPack} ${\r\n                                props.partialBoxQuantity &&\r\n                                `+ ${props.partialBoxQuantity} partial`\r\n                            } = ${\r\n                                (props.boxes || 0) * props.standardPack +\r\n                                (props.partialBoxQuantity || 0)\r\n                            } total`}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </Card.Body>\r\n    );\r\n}\r\n\r\nfunction InventoryBox(props: {\r\n    serial: number;\r\n    part: string;\r\n    quantity: number;\r\n    partial: boolean;\r\n}) {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{`S${props.serial}${\r\n                    props.partial ? ' [Partial]' : ''\r\n                }`}</Card.Title>\r\n                <Form>\r\n                    <FloatingLabel\r\n                        controlId=\"floatingInput\"\r\n                        label=\"Part\"\r\n                        className=\"mb-3\"\r\n                    >\r\n                        <Form.Control readOnly value={props.part} />\r\n                    </FloatingLabel>\r\n                    <FloatingLabel\r\n                        controlId=\"floatingInput\"\r\n                        label=\"Quantity\"\r\n                        className=\"mb-3\"\r\n                    >\r\n                        <Form.Control value={props.quantity} />\r\n                    </FloatingLabel>\r\n                    {props.partial && (\r\n                        <FloatingLabel\r\n                            controlId=\"floatingInput\"\r\n                            label=\"Scan partial S3521477 (qty 35) to combine\"\r\n                            className=\"mb-3\"\r\n                        >\r\n                            <Form.Control />\r\n                        </FloatingLabel>\r\n                    )}\r\n                </Form>\r\n                <Button>Delete Box</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction RunJob(props: {\r\n    step: string;\r\n    part?: string;\r\n    instructions?: string;\r\n    acknowledged?: boolean;\r\n    quantity?: number;\r\n    pieceWeight?: number;\r\n    valid?: boolean;\r\n    operator?: string;\r\n    machine?: string;\r\n    jobInProgress?: boolean;\r\n    standardPack?: number;\r\n    boxes?: number;\r\n    partialBoxQuantity?: number;\r\n    objectList?: {\r\n        serial: number;\r\n        quantity: number;\r\n        partial: boolean;\r\n    }[];\r\n}) {\r\n    return (\r\n        <>\r\n            <p className=\"fs-5\">{props.step}</p>\r\n            {!props.jobInProgress ? (\r\n                <StartNewJob\r\n                    part={props.part}\r\n                    instructions={props.instructions}\r\n                    acknowledged={props.acknowledged}\r\n                    quantity={props.quantity}\r\n                    pieceWeight={props.pieceWeight}\r\n                    valid={props.valid}\r\n                    operator={props.operator}\r\n                    machine={props.machine}\r\n                />\r\n            ) : (\r\n                <BeginJobSummary\r\n                    part={props.part}\r\n                    instructions={props.instructions}\r\n                    acknowledged={props.acknowledged}\r\n                    quantity={props.quantity}\r\n                    pieceWeight={props.pieceWeight}\r\n                    valid={props.valid}\r\n                    operator={props.operator}\r\n                    machine={props.machine}\r\n                />\r\n            )}\r\n            {props.jobInProgress &&\r\n                (!props.objectList?.length ? (\r\n                    <LotQuantity\r\n                        standardPack={props.standardPack || 0}\r\n                        boxes={props.boxes}\r\n                        partialBoxQuantity={props.partialBoxQuantity}\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <LotQuantitySummary\r\n                            standardPack={props.standardPack || 0}\r\n                            boxes={props.boxes}\r\n                            partialBoxQuantity={props.partialBoxQuantity}\r\n                        />\r\n                        <Card.Body>\r\n                            <Card.Title>Inventory</Card.Title>\r\n                            <Row xs={1} md={2} className=\"g-4\">\r\n                                {props.objectList.map((object) => (\r\n                                    <Col>\r\n                                        <InventoryBox\r\n                                            serial={object.serial}\r\n                                            part={props.part ?? ''}\r\n                                            quantity={object.quantity}\r\n                                            partial={object.partial}\r\n                                        />\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                            <Button>Print Labels</Button>\r\n                        </Card.Body>\r\n                    </>\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    return (\r\n        <Container className=\"col-6\">\r\n            <Row>\r\n                <Col sm=\"8\">\r\n                    <p className=\"fs-1\">Fx Pack Line</p>\r\n                </Col>\r\n                <Col sm=\"4\">\r\n                    <p className=\"fs-6\">Logged in as [User]</p>\r\n                </Col>\r\n            </Row>\r\n            <p className=\"fs-3\">Starting a new job</p>\r\n            <Container as=\"article\">\r\n                <RunJob step=\"1: Choose a part\" />\r\n            </Container>\r\n            <RunJob\r\n                step=\"2: Display Special Instructions & Require Acknowledment (if present)\"\r\n                part=\"1\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n            />\r\n            <RunJob\r\n                step=\"3.1 [part requires 'Final Inspection']: Enter Piece Weight\"\r\n                part=\"1\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n            />\r\n            <RunJob\r\n                step=\"4.1.1 [part requires 'Final Inspection']: Verify piece weight\"\r\n                part=\"1\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={false}\r\n            />\r\n            <RunJob\r\n                step=\"5.1.1 [part requires 'Final Inspection']: Enter Deflash Operator and Machine\"\r\n                part=\"1\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={true}\r\n            />\r\n            <RunJob\r\n                step=\"6.1.1 [part requires 'Final Inspection']: Open Job\"\r\n                part=\"1\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={true}\r\n                operator={'JK'}\r\n                machine={'D1'}\r\n            />\r\n            <RunJob\r\n                step=\"7: Enter Lot Quantity\"\r\n                part=\"1\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={true}\r\n                operator={'JK'}\r\n                machine={'D1'}\r\n                jobInProgress={true}\r\n                standardPack={100}\r\n            />\r\n            <RunJob\r\n                step=\"8: Generate Inventory\"\r\n                part=\"XXX\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={true}\r\n                operator={'JK'}\r\n                machine={'D1'}\r\n                jobInProgress={true}\r\n                standardPack={100}\r\n                boxes={3}\r\n                partialBoxQuantity={17}\r\n            />\r\n            <RunJob\r\n                step=\"9: Review Inventory\"\r\n                part=\"XXX\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={true}\r\n                operator={'JK'}\r\n                machine={'D1'}\r\n                jobInProgress={true}\r\n                standardPack={100}\r\n                boxes={3}\r\n                partialBoxQuantity={17}\r\n                objectList={[\r\n                    {\r\n                        serial: 5555123,\r\n                        quantity: 100,\r\n                        partial: false,\r\n                    },\r\n                    {\r\n                        serial: 5555124,\r\n                        quantity: 100,\r\n                        partial: false,\r\n                    },\r\n                    {\r\n                        serial: 5555125,\r\n                        quantity: 100,\r\n                        partial: false,\r\n                    },\r\n                    {\r\n                        serial: 5555126,\r\n                        quantity: 17,\r\n                        partial: true,\r\n                    },\r\n                ]}\r\n            />\r\n            <RunJob\r\n                step=\"10: Print Labels\"\r\n                part=\"XXX\"\r\n                instructions={\r\n                    'Place a thin strip of blue tape along bottom edge of box'\r\n                }\r\n                acknowledged={true}\r\n                quantity={20}\r\n                pieceWeight={0.012357}\r\n                valid={true}\r\n                operator={'JK'}\r\n                machine={'D1'}\r\n                jobInProgress={true}\r\n                standardPack={100}\r\n                boxes={3}\r\n                partialBoxQuantity={17}\r\n                objectList={[\r\n                    {\r\n                        serial: 5555123,\r\n                        quantity: 100,\r\n                        partial: false,\r\n                    },\r\n                    {\r\n                        serial: 5555124,\r\n                        quantity: 100,\r\n                        partial: false,\r\n                    },\r\n                    {\r\n                        serial: 5555125,\r\n                        quantity: 100,\r\n                        partial: false,\r\n                    },\r\n                    {\r\n                        serial: 5555126,\r\n                        quantity: 17,\r\n                        partial: true,\r\n                    },\r\n                ]}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}